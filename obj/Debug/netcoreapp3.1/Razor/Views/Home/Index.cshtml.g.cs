#pragma checksum "C:\Users\Sushmitha\source\repos\API\WebApplicationProject\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "70a35a6fa499b2498f487062b21963170a805475"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Sushmitha\source\repos\API\WebApplicationProject\Views\_ViewImports.cshtml"
using WebApplicationProject;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Sushmitha\source\repos\API\WebApplicationProject\Views\_ViewImports.cshtml"
using WebApplicationProject.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"70a35a6fa499b2498f487062b21963170a805475", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"649ecf1ec905cdaa56c12bcf669b801c0ee3f95c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<WebApplicationProject.Models.WordData>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Create", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\Sushmitha\source\repos\API\WebApplicationProject\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
#nullable disable
            WriteLiteral("<style>\r\n    .pt-3-half {\r\n        padding-top: 1.4rem;\r\n    }\r\n</style>\r\n<h1>Index</h1>\r\n\r\n<p>\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70a35a6fa499b2498f487062b21963170a8054754664", async() => {
                WriteLiteral("Create New");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
</p>

<div class=""card-body"" style=""width:49%"">
    <div id=""table"" class=""table-editable"">
        <span class=""table-add float-right mb-3 mr-2"">
            <a href=""#!"" class=""text-success"">
                <i class=""fas fa-plus fa-2x"" aria-hidden=""true""></i>
            </a>
        </span>
        <table class=""table table-bordered table-responsive-md table-striped text-center"" id=""tblWord"">
            <thead>
                <tr>
                    <th class=""text-center"">Words</th>
                    <th class=""text-center"">Result</th>

                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class=""pt-3-half edit "" style=""width:27%; padding-top:3px; padding-bottom:3px; padding-left:3px;padding-right:3px;"" contenteditable=""true""><input");
            BeginWriteAttribute("value", " value=\"", 1067, "\"", 1075, 0);
            EndWriteAttribute();
            WriteLiteral(@" style=""width:99%"" type=""text"" /></td>
                    <td class=""pt-3-half"" style=""width:5%; padding-top:3px; padding-bottom:3px; padding-left:3px;padding-right:3px;""></td>

                </tr>

            </tbody>
        </table>
    </div>
</div>
<button type=""button"" id=""getvalue"" class=""btn btn-primary"">Submit</button>

");
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70a35a6fa499b2498f487062b21963170a8054757350", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script>

        $("".table-editable"").keyup(function (event) {
            if (event.keyCode == 13) {
                $('#table tr:last').after('<tr><td class=""pt-3-half edit"" style=""width:27%; padding-top:3px; padding-bottom:3px; padding-left:3px;padding-right:3px;"" contenteditable=""true"" ><input value="""" style=""width:99%"" type=""text""/></td><td class=""pt-3-half"" style=""width:5%; padding-top:3px; padding-bottom:3px; padding-left:3px;padding-right:3px;""></td></tr>');
                $(this).trigger(""keydown"", [9]);
            }
        });

        $(""#getvalue"").click(function () {
            const $rows = $tableID.find('tr');
            const headers = [];
            const data = [];
            const dic = [];


            $($rows.shift()).find('th:not(:empty)').each(function () {

                headers.push($(this).text().toLowerCase());
                console.log(headers);
            });
            $tableID.find('td.edit').each(function () {
                data.push");
                WriteLiteral("($(this).find(\'input\').val());\r\n                console.log(data);\r\n            });\r\n\r\n\r\n            var myArray = [];\r\n\r\n");
#nullable restore
#line 112 "C:\Users\Sushmitha\source\repos\API\WebApplicationProject\Views\Home\Index.cshtml"
     foreach (var d in Model)
    {
        

#line default
#line hidden
#nullable disable
                WriteLiteral("        ");
                WriteLiteral("myArray.push(\"");
#nullable restore
#line 115 "C:\Users\Sushmitha\source\repos\API\WebApplicationProject\Views\Home\Index.cshtml"
                   Write(d.WordName);

#line default
#line hidden
#nullable disable
                WriteLiteral("\");\r\n");
#nullable restore
#line 116 "C:\Users\Sushmitha\source\repos\API\WebApplicationProject\Views\Home\Index.cshtml"

    }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
            console.log(myArray);

           
            
            var result = [];
                $.each(data, function (idx, value) {
                   // debugger
                    if ($.inArray(value, myArray) !== -1) {                      
                        console.log('Match: ' + value);
                        result.push('Correct');
                    } else {
                      
                        console.log('Not Match: ' + value);
                        result.push('Wrong');
                    }
                    console.log(result);
                });

            //$.each(result, function (index, value) {
            //    $tableID.find(""td:not(.edit):eq(index)"").append(value);
            //});
           

            $tableID.find(""td:not(.edit):eq(0)"").append(result[0]);
            $tableID.find(""td:not(.edit):eq(1)"").append(result[1]);
            $tableID.find(""td:not(.edit):eq(2)"").append(result[2]);
            $tableID.find(""td:n");
                WriteLiteral(@"ot(.edit):eq(3)"").append(result[3]);
            $tableID.find(""td:not(.edit):eq(4)"").append(result[4]);
            $tableID.find(""td:not(.edit):eq(5)"").append(result[5]);
            $tableID.find(""td:not(.edit):eq(6)"").append(result[6]);
            $tableID.find(""td:not(.edit):eq(7)"").append(result[7]);
            $tableID.find(""td:not(.edit):eq(8)"").append(result[8]);
            $tableID.find(""td:not(.edit):eq(9)"").append(result[9]);
            $tableID.find(""td:not(.edit):eq(10)"").append(result[10]);

           
            $tableID.find(""td:not(.edit):eq(11)"").append(result[11]);
            $tableID.find(""td:not(.edit):eq(12)"").append(result[12]);
            $tableID.find(""td:not(.edit):eq(13)"").append(result[13]);
            $tableID.find(""td:not(.edit):eq(14)"").append(result[14]);
            $tableID.find(""td:not(.edit):eq(15)"").append(result[15]);
            $tableID.find(""td:not(.edit):eq(16)"").append(result[16]);
            $tableID.find(""td:not(.edit):eq(17)"").append(res");
                WriteLiteral(@"ult[17]);
            $tableID.find(""td:not(.edit):eq(18)"").append(result[18]);
            $tableID.find(""td:not(.edit):eq(19)"").append(result[19]);
            $tableID.find(""td:not(.edit):eq(20)"").append(result[20]);
          
       

        });

        //---------------------------------------------------------------------
        const $tableID = $('#table');
        const $BTN = $('#export-btn');
        const $EXPORT = $('#export');

        const newTr = `
<tr class=""hide"">
          <td class=""pt-3-half"" contenteditable=""true"">Example</td>
          <td class=""pt-3-half"" contenteditable=""true"">Example</td>
</tr>`;

        $('.table-add').on('click', 'i', () => {

            const $clone = $tableID.find('tbody tr').last().clone(true).removeClass('hide table-line');

            if ($tableID.find('tbody tr').length === 0) {

                $('tbody').append(newTr);
            }

            $tableID.find('table').append($clone);
        });

        $tableID.on('");
                WriteLiteral(@"click', '.table-remove', function () {

            $(this).parents('tr').detach();
        });

        $tableID.on('click', '.table-up', function () {

            const $row = $(this).parents('tr');

            if ($row.index() === 0) {
                return;
            }

            $row.prev().before($row.get(0));
        });

        $tableID.on('click', '.table-down', function () {

            const $row = $(this).parents('tr');
            $row.next().after($row.get(0));
        });

        // A few jQuery helpers for exporting only
        jQuery.fn.pop = [].pop;
        jQuery.fn.shift = [].shift;

        $BTN.on('click', () => {

            const $rows = $tableID.find('tr:not(:hidden)');
            const headers = [];
            const data = [];

            // Get the headers (add special header logic here)
            $($rows.shift()).find('th:not(:empty)').each(function () {

                headers.push($(this).text().toLowerCase());
            });");
                WriteLiteral(@"

            // Turn all existing rows into a loopable array
            $rows.each(function () {
                const $td = $(this).find('td');
                const h = {};

                // Use the headers from earlier to name our hash keys
                headers.forEach((header, i) => {

                    h[header] = $td.eq(i).text();
                });

                data.push(h);
            });

            // Output the result
            $EXPORT.text(JSON.stringify(data));
        });
    </script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<WebApplicationProject.Models.WordData>> Html { get; private set; }
    }
}
#pragma warning restore 1591
